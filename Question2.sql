DROP TABLE IF EXISTS example_2.transactions;
DROP SCHEMA IF EXISTS example_2;
CREATE SCHEMA example_2;

CREATE TABLE example_2.transactions (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	product_id int NULL,
	ship_date date NOT NULL,
	transaction_type text NOT NULL,
	unit_of_measure text NOT NULL,
	CONSTRAINT pk_transactions PRIMARY KEY (id)
);
 
INSERT INTO example_2.transactions (product_id, ship_date, transaction_type, unit_of_measure)
SELECT ROUND((random() * 100 + 1)::numeric),
	   ('2022-12-31'::date - random() * INTERVAL '365 days')::date,
	   CASE WHEN ROUND((random())::numeric) = 0 THEN 'SALE' ELSE 'PURCHASE' END, 
       CASE WHEN ROUND((random())::numeric) = 0 THEN 'GA' ELSE 'KG' END
FROM generate_series(1, 10000, 1) AS id
CROSS JOIN 
(
	SELECT generate_series(1, 100, 1) d
) AS dates;

-- Answer
-- Step 3: Create indexes to optimize the query
CREATE INDEX idx_transactions_product_id_ship_date ON example_2.transactions (product_id, ship_date);

-- Partial index for the month of June
CREATE INDEX idx_transactions_june ON example_2.transactions (ship_date)
WHERE EXTRACT(MONTH FROM ship_date) = 6;

-- Step 4: Construct and execute the optimized query
SELECT id, product_id, transaction_type, unit_of_measure
FROM example_2.transactions
WHERE product_id = 50
AND EXTRACT(MONTH FROM ship_date) = 6;